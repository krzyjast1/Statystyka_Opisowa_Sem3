notifications <- read.csv("data_set.csv")
hist(notifications$Powiadomienia, ylab = "Częstotliwość", xlab = "Liczba powiadomień", main = "Histogram powiadomień w ciągu dnia", col = "lightblue", breaks = 8)
#boxplot(notifications$Powiadomienia, main = "Diagram typu boxplot", horizontal = TRUE, col = "lightblue")
median(notifications$Powiadomienia)
notifications <- read.csv("data_set.csv")
hist(notifications$Powiadomienia, ylab = "Częstotliwość", xlab = "Liczba powiadomień", main = "Histogram powiadomień w ciągu dnia", col = "lightblue", breaks = 12)
#boxplot(notifications$Powiadomienia, main = "Diagram typu boxplot", horizontal = TRUE, col = "lightblue")
median(notifications$Powiadomienia)
notifications <- read.csv("data_set.csv")
hist(notifications$Powiadomienia, ylab = "Częstotliwość", xlab = "Liczba powiadomień", main = "Histogram powiadomień w ciągu dnia", col = "lightblue", breaks = 2)
#boxplot(notifications$Powiadomienia, main = "Diagram typu boxplot", horizontal = TRUE, col = "lightblue")
median(notifications$Powiadomienia)
notifications <- read.csv("data_set.csv")
hist(notifications$Powiadomienia, ylab = "Częstotliwość", xlab = "Liczba powiadomień", main = "Histogram powiadomień w ciągu dnia", col = "lightblue", breaks = 3)
#boxplot(notifications$Powiadomienia, main = "Diagram typu boxplot", horizontal = TRUE, col = "lightblue")
median(notifications$Powiadomienia)
source("~/RStudioProjects/test_uni_project/test_script.R")
notifications <- read.csv("data_set.csv")
summary(notifications)
install.packages("learnr")
notifications <- read.csv("data_set.csv")
summary(notifications)
notifications <- read.csv("data_set.csv")
summary(notifications)
mode(notifications)
notifications <- read.csv("data_set.csv")
summary(notifications)
table(notifications)
xtabs(notifications)
notifications <- read.csv("data_set.csv")
#summary(notifications)
n <- length(notifications)
y1 <- cut(notifications, sqrt(n))
notifications <- read.csv("data_set.csv")
#summary(notifications)
n <- length(notifications)
y1 <- cut(notifications, sqrt(n))
source("~/RStudioProjects/test_uni_project/test_script.R")
notifications <- read.csv("data_set.csv")
#summary(notifications)
n <- length(notifications)
y1 <- cut(notifications, sqrt(n))
notifications <- read.csv("data_set.csv")
#summary(notifications)
length(notifications)
notifications <- read.csv("data_set.csv")
#summary(notifications)
table(notifications)
notifications <- read.csv("data_set.csv")
#summary(notifications)
table(notifications$Powiadomienia)
y1 <- cut(notifications$Powiadomienia, sqrt(n))
notifications = read.csv("data_set.csv")
notifications
notifications
notifications = read.csv("data_set.csv")$Powiadomienia
notifications
notifications = read.csv("data_set.csv")$Powiadomienia
summary(notifications)
notifications = read.csv("data_set.csv")$Powiadomienia
table(cut(notifications, sqrt(notifications.len())))
notifications = read.csv("data_set.csv")$Powiadomienia
table(cut(notifications, sqrt(length(notifications))))
notifications = read.csv("data_set.csv")$Powiadomienia
table(cut(notifications, sqrt(length(notifications))))
hist(notifications, breaks = sqrt(length(notifications)))
notifications = read.csv("data_set.csv")$Powiadomienia
table(cut(notifications, sqrt(length(notifications))))
hist(cut(notifications, sqrt(length(notifications)))
notifications = read.csv("data_set.csv")$Powiadomienia
hist(cut(notifications, sqrt(25)))
cut(notifications, sqrt(25))
cut(notifications)
cut(notifications, breaks = 5)
#Tworzę wektor zawierający obserwacje
notifications = read.csv("data_set.csv")$Powiadomienia
#Miary tendencji centralnej
Średnia arytmetyczna
#Tworzę wektor zawierający obserwacje
notifications = read.csv("data_set.csv")$Powiadomienia
#Miary tendencji centralnej
"Średnia arytmetyczna:\n"
mean(notifications)
mode(notifications)
sorted_data_freq_based <- names(sort(table(notifications), descending = TRUE))
sorted_data_freq_based <- names(sort(table(notifications), descending = TRUE))
sorted_data_freq_based
sorted_data_freq_based <- names(sort(table(notifications), descreasing = TRUE))
sorted_data_freq_based
sorted_data_freq_based <- sort(table(notifications), descreasing = TRUE)
sorted_data_freq_based
sorted_data_freq_based <- sort(table(notifications))
sorted_data_freq_based
sorted_data_freq_based <- sort(table(notifications), decreasing = TRUE)
sorted_data_freq_based
source("~/RStudioProjects/test_uni_project/test_script.R")
source("~/RStudioProjects/test_uni_project/test_script.R")
source("~/RStudioProjects/test_uni_project/test_script.R")
source("~/RStudioProjects/test_uni_project/test_script.R")
powiadomienia = read.table("data_set.txt", header = TRUE)
powiadomienia
powiadomienia = read.table("data_set.txt", header = TRUE)$Powiadomienia
powiadomienia = read.table("data_set.txt", header = TRUE)$Powiadomienia
powiadomienia
powiadomienia = read.table("data_set.txt", header = TRUE)$Powiadomienia
powiadomienia
powiadomienia = read.table("data_set.txt", header = TRUE)$Powiadomienia
powiadomienia
powiadomienia = read.table("data_set.txt", header = TRUE)$Powiadomienia
powiadomienia
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
table(powiadomienia)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
#Dominanta
print(getMode(powiadomienia))
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
result <- getmode(powiadomienia)
#Dominanta
result <- getMode(powiadomienia)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R")
#Dominanta
uniqv <- unique(powiadomienia)
uniqv[which.max(tabulate(match(powiadomienia, uniqv)))]
#Dominanta
print("Dominanta: ")
values <- unique(powiadomienia)
values[which.max(tabulate(match(powiadomienia, values)))]
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
print("Kwartyl pierwszy:")
quantile(powiadomienia)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
#Rozstęp
print("Rozstęp:")
rozstep <- max(powiadomienia) - min(powiadomienia)
max(powiadomienia) - min(powiadomienia)
print("Rozstęp:")
max(powiadomienia) - min(powiadomienia)
summary(powiadomienia)
#Wariancja
print("Wariancja:")
var(powiadomienia)
#Odchylenie standardowe
print("Odchylenie standardowe:")
sd(powiadomienia)
#Wariancja
print("Wariancja:")
var(powiadomienia)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
IQR(powiadomienia)/2
#ZADANIE 3 - współczynnik zmienności
cv(powiadomienia)
#ZADANIE 3 - współczynnik zmienności
cv <- sd(powiadomienia) / mean(powiadomienia)
cv
#ZADANIE 4 - wykres boxplot
boxplot(powiadomienia)
#ZADANIE 4 - wykres boxplot
boxplot(powiadomienia, ylab = "Liczba powiadomień")
n <- sqrt(length(powiadomienia))
n
boxplot(powiadomienia,
main = "Wykres boxplot liczby powiadomień",
ylab = "Liczba powiadomień")
k <- round(sqrt(n), digits = 0)
k
#Szerokość przedziału klasowego
szer_klasy <- (max(powiadomienia) - min(powiadomienia)) / k
szer_klasy
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia)+.2, by = szer_klasy),
include.lowest = TRUE))
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia)+.2, by = 1),
include.lowest = TRUE))
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia)+.2, by = 40),
include.lowest = TRUE))
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia)+.2, by = 50),
include.lowest = TRUE))
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia)+.2, by = 50),
include.lowest = TRUE))
source("~/RStudioProjects/test_uni_project/test_script.R")
powiadomienia = read.table("data_set.txt", header = TRUE)$Powiadomienia
powiadomienia
#ZADANIE 1 - Miary tendencji centralnej:
#Średnia arytmetyczna
print("Średnia arytmetyczna: ")
mean(powiadomienia)
#Dominanta
print("Dominanta: ")
values <- unique(powiadomienia)
values[which.max(tabulate(match(powiadomienia, values)))]
#Mediana
print("Mediana:")
median(powiadomienia)
#Kwartyl pierwszy
print("Kwartyl pierwszy:")
quantile(powiadomienia, probs = 0.25)
#Kwartyl trzeci
print("Kwartyl trzeci:")
quantile(powiadomienia, probs = 0.75)
#ZADANIE 2 - MIARY ZRÓŻNICOWANIA
#Rozstęp
print("Rozstęp:")
max(powiadomienia) - min(powiadomienia)
#Wariancja
print("Wariancja:")
var(powiadomienia)
#Odchylenie standardowe
print("Odchylenie standardowe:")
sd(powiadomienia)
#Odchylenie ćwiartkowe
IQR(powiadomienia)/2
#Rozstęp międzykwartylowy
IQR(powiadomienia)
#ZADANIE 3 - współczynnik zmienności
wspolczynnik_zmiennosci <- sd(powiadomienia) / mean(powiadomienia)
#ZADANIE 4 - wykres boxplot
boxplot(powiadomienia,
main = "Wykres boxplot liczby powiadomień",
ylab = "Liczba powiadomień")
#ZADANIE 5 - szereg rozdzielczy
#Liczba przypadków
n <- length(powiadomienia)
#Liczba klas
k <- round(sqrt(n), digits = 0)
k
#Szerokość przedziału klasowego
szer_klasy <- (max(powiadomienia) - min(powiadomienia)) / k
szer_klasy
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = 50),
include.lowest = TRUE, include))
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = 35.5),
include.lowest = TRUE))
table(cut(powiadomienia, seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = 35.5),
include.lowest = TRUE))
table(cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = 35.5),
include.lowest = TRUE))
szereg <- cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = 35.5),
include.lowest = TRUE)
table(szereg)
szer_klasy <- (max(powiadomienia) - min(powiadomienia)) / k
szer_klasy
szereg <- cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy),
include.lowest = TRUE)
table(szereg)
szereg <- cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy))
table(szereg)
szereg <- cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy), include.lowest = TRUE)
table(szereg)
hist(szereg)
source("~/RStudioProjects/test_uni_project/test_script.R")
hist(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy),
include.lowest = TRUE)
hist(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy),
include.lowest = TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R")
szereg
szer_klasy <- (max(powiadomienia)+0.5 - min(powiadomienia)-0.5) / k
szereg <- cut(powiadomienia, seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy), include.lowest = TRUE)
table(szereg)
szer_klasy <- (max(powiadomienia)+0.5 - min(powiadomienia)-0.5) / k
szer_klasy
szereg <- cut(powiadomienia, seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy), include.lowest = TRUE)
table(szereg)
#Szerokość przedziału klasowego
szer_klasy <- ((max(powiadomienia)+0.5) - (min(powiadomienia)-0.5)) / k
szer_klasy
szereg <- cut(powiadomienia, seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy), include.lowest = TRUE)
table(szereg)
szer_klasy <- ceiling(((max(powiadomienia)+0.5) - (min(powiadomienia)-0.5))) / k
szer_klasy
szereg <- cut(powiadomienia, seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy), include.lowest = TRUE)
table(szereg)
source("~/RStudioProjects/test_uni_project/test_script.R")
szer_klasy <- ceiling(((max(powiadomienia)+0.5) - (min(powiadomienia)-0.5))) / k
szer_klasy
szereg <- cut(powiadomienia, seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy), include.lowest = TRUE)
table(szereg)
szer_klasy <- ceiling(((max(powiadomienia)+0.5) - (min(powiadomienia)-0.5)) / k)
szer_klasy
szereg <- cut(powiadomienia, seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy), include.lowest = TRUE)
table(szereg)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
test <- seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy)
test[0]
test <- seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy)
test
#Szerokość przedziału klasowego
szer_klasy <- ceiling((max(powiadomienia) - min(powiadomienia)) / k)
szereg <- cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy), include.lowest = TRUE)
table(szereg)
#ZADANIE 6 - Histogram
hist(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy),
include.lowest = TRUE)
szer_klasy <- ceiling((max(powiadomienia) - min(powiadomienia)) / k)
szereg <- cut(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = szer_klasy), include.lowest = TRUE)
table(szereg)
#ZADANIE 6 - Histogram
#hist(powiadomienia, seq(min(powiadomienia), max(powiadomienia), by = 35.5),
#     include.lowest = TRUE)
#ZADANIE 7 - miary tendencji centralnej i miary zróżnicowania dla szeregu rozdzielczego
test <- seq(min(powiadomienia)-0.5, max(powiadomienia)+0.5, by = szer_klasy)
test
test <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = szer_klasy)
test
test <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k)
test
test <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1)
test
min_vals <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k)
max_vals <- seq(min(powiadomienia)-0.5 + szer_klasy, by = szer_klasy, length.out = k)
szereg_rozdzielczy <- data.frame()
szereg_rozdzielczy$PoczatekKlasy <- min_vals
#ZADANIE 7 - miary tendencji centralnej i miary zróżnicowania dla szeregu rozdzielczego
min_vals <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k)
max_vals <- seq(min(powiadomienia)-0.5 + szer_klasy, by = szer_klasy, length.out = k)
szereg_rozdzielczy <- data.frame(NumerKlasy = c(1, 2, 3, 4, 5, 6))
szereg_rozdzielczy$PoczatekKlasy <- min_vals
szereg_rozdzielczy$KoniecKlasy <- max_vals
szereg_rozdzielczy
min_vals[0]
min_vals <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k)
max_vals <- seq(min(powiadomienia)-0.5 + szer_klasy, by = szer_klasy, length.out = k)
min_vals[1]
i <- 1
while (i <= k) {
srodek_klasy <- append((min_vals[i]+max_vals[i])/2)
i <- i + 1
}
i <- 1
while (i <= k) {
srodek_klasy <- append(srodek_klasy, (min_vals[i]+max_vals[i])/2)
i <- i + 1
}
i <- 1
while (i <= k) {
srodek_klasy[i] <- (min_vals[i] + max_vals[i]) / 2
i <- i + 1
}
i <- 1
while (i <= k)
srodek_klasy[i] <- (min_vals[i] + max_vals[i]) / 2
i <- 1
while (i <= k) {
srodek_klasy <- append(srodek_klasy, ((min_vals[i] + max_vals[i]) / 2), )
i <- i + 1
}
srodek_klasy <- c()
i <- 1
while (i <= k) {
srodek_klasy <- append(srodek_klasy, ((min_vals[i] + max_vals[i]) / 2), )
i <- i + 1
}
srodek_klasy
min_vals <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k)
max_vals <- seq(min(powiadomienia)-0.5 + szer_klasy, by = szer_klasy, length.out = k)
srodek_klasy <- c()
i <- 1
while (i <= k) {
srodek_klasy <- append(srodek_klasy, ((min_vals[i] + max_vals[i]) / 2), )
i <- i + 1
}
srodek_klasy
szereg_rozdzielczy <- data.frame(NumerKlasy = c(1, 2, 3, 4, 5, 6))
szereg_rozdzielczy$PoczatekKlasy <- min_vals
szereg_rozdzielczy$KoniecKlasy <- max_vals
szereg_rozdzielczy$SrodekKlasy <- srodek_klasy
szereg_rozdzielczy
min_vals <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k)
max_vals <- seq(min(powiadomienia)-0.5 + szer_klasy, by = szer_klasy, length.out = k)
srodek_klasy <- c()
licznosc_klasy <- c()
i <- 1
while (i <= k) {
srodek_klasy <- append(srodek_klasy, ((min_vals[i] + max_vals[i]) / 2))
licznosc_klasy <- append(licznosc_klasy, sum(powiadomienia > min_vals[i] & powiadomienia < max_vals[i]))
i <- i + 1
}
szereg_rozdzielczy <- data.frame(NumerKlasy = c(1, 2, 3, 4, 5, 6))
szereg_rozdzielczy$PoczatekKlasy <- min_vals
szereg_rozdzielczy$KoniecKlasy <- max_vals
szereg_rozdzielczy$SrodekKlasy <- srodek_klasy
szereg_rozdzielczy$Licznosc <- licznosc_klasy
szereg_rozdzielczy
mean(powiadomienia)
hist(powiadomienia, seq(min(powiadomienia)-0.5 + szer_klasy, by = szer_klasy, length.out = k+1),
include.lowest = TRUE)
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1),
include.lowest = TRUE)
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1),
include.lowest = TRUE)
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1))
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1),
xlim = c(84.5, 300.5), ylim = c(0, 13))
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1),
xlim = c(84.5, 300.5), ylim = c(0, 13))
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1),
xlim = c(80, 320), ylim = c(0, 14))
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1),
xlim = c(50, 350), ylim = c(0, 14))
hist(powiadomienia, seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k+1),
xlim = c(50, 350),
ylim = c(0, 14),
main = "Histogram powiadomień",
xlab = "Liczba powiadomień w ciągu dnia",
ylab = "Liczba dni")
szereg_wartosci <- c()
i <- 1
while(i <= k){
szereg_wartosci <- append(szereg_wartosci,
rep(szereg_rozdzielczy$SrodekKlasy[i], szereg_rozdzielczy$Licznosc[i]))
i <- i + 1
}
szereg_wartosci
#szereg_wartosci <- c()
i <- 1
while(i <= k){
szereg_wartosci <- append(szereg_wartosci,
rep(szereg_rozdzielczy$SrodekKlasy[i], szereg_rozdzielczy$Licznosc[i]))
i <- i + 1
}
i <- 1
while(i <= k){
szereg_wartosci <- append(szereg_wartosci,
rep(szereg_rozdzielczy$SrodekKlasy[i], szereg_rozdzielczy$Licznosc[i]))
i <- i + 1
}
szereg_wartosci
szereg_wartosci <- c()
i <- 1
while(i <= k){
szereg_wartosci <- append(szereg_wartosci,
rep(szereg_rozdzielczy$SrodekKlasy[i], szereg_rozdzielczy$Licznosc[i]))
i <- i + 1
}
szereg_wartosci
mean(szereg_wartosci)
values_S <- unique(wartosci_szeregu)
#Mediana
median(szereg_wartosci)
#Dominanta
values_S <- unique(szereg_wartosci)
values_S[which.max(tabulate(match(szereg_wartosci, values_S)))]
#Kwartyl pierwszy
quantile(szereg_wartosci, probs = 0.25)
#Kwartyl trzeci
quantile(szereg_wartosci, probs = 0.75)
min_vals <- seq(min(powiadomienia)-0.5, by = szer_klasy, length.out = k)
max_vals <- seq(min(powiadomienia)-0.5 + szer_klasy, by = szer_klasy, length.out = k)
srodek_klasy <- c()
licznosc_klasy <- c()
licznosc_skumulowana <- c()
i <- 1
while (i <= k) {
srodek_klasy <- append(srodek_klasy, ((min_vals[i] + max_vals[i]) / 2))
licznosc_klasy <- append(licznosc_klasy, sum(powiadomienia > min_vals[i] & powiadomienia < max_vals[i]))
if(i == 1){
licznosc_skumulowana <- append(licznosc_skumulowana, licznosc_klasy[i])
} else {
licznosc_skumulowana <- append(licznosc_skumulowana, licznosc_skumulowana[i-1]+licznosc_klasy[i])
}
i <- i + 1
}
szereg_rozdzielczy <- data.frame(NumerKlasy = c(1, 2, 3, 4, 5, 6))
szereg_rozdzielczy$PoczatekKlasy <- min_vals
szereg_rozdzielczy$KoniecKlasy <- max_vals
szereg_rozdzielczy$SrodekKlasy <- srodek_klasy
szereg_rozdzielczy$Licznosc <- licznosc_klasy
szereg_rozdzielczy$LiczSkumul <- licznosc_skumulowana
szereg_rozdzielczy
klasa <- 2
mediana <- szereg_rozdzielczy$PoczatekKlasy[klasa] +
((szer_klasy * (n/2 - szereg_rozdzielczy$LiczSkumul[klasa-1])) / szereg_rozdzielczy$Licznosc[klasa])
mediana
source("~/RStudioProjects/test_uni_project/test_script.R")
klasa <- 1
dominanta <- szereg_rozdzielczy$PoczatekKlasy[klasa] +
((szereg_rozdzielczy$Licznosc[klasa] - 0) /
((szereg_rozdzielczy$Licznosc[klasa] - 0) + (szereg_rozdzielczy$Licznosc[klasa] + szereg_rozdzielczy$Licznosc[klasa+1])))
dominanta
quantile(szereg_wartosci, probs = 0.25)
#Kwartyl trzeci
quantile(szereg_wartosci, probs = 0.75)
quantile(powiadomienia, probs = 0.25)
#Kwartyl trzeci
quantile(powiadomienia, probs = 0.75)
klasa <- 1
q1 <- szereg_rozdzielczy$PoczatekKlasy[klasa] +
((szer_klasy*((n/4)-0))/szereg_rozdzielczy$Licznosc[klasa])
q1
klasa <- 3
q3 <- szereg_rozdzielczy$PoczatekKlasy[klasa] +
((szer_klasy*((3*n/4)-szereg_rozdzielczy$LiczSkumul[klasa-1]))/szereg_rozdzielczy$Licznosc[klasa])
q3
source("~/RStudioProjects/test_uni_project/test_script.R")
var(szereg_wartosci)
sd(szereg_wartosci)
#Rozstęp międzykwartylowy
q3 - q1
#Odchylenie ćwiartkowe
(q3-q1)/2
source("~/RStudioProjects/test_uni_project/test_script.R")
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/test_uni_project/test_script.R")
source("~/RStudioProjects/test_uni_project/test_script.R", echo=TRUE)
source("~/RStudioProjects/michal_gryc/test_script.R", echo=TRUE)
source("~/RStudioProjects/michal_gryc/test_script.R", echo=TRUE)
